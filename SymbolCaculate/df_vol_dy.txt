- omega.*conj(k_2).*(sin(y.*conj(beta_2)).*cos(h.*conj(alpha_2)).*(conj(beta_2).^2./2 - conj(k_2).^2./2) - sin(y.*conj(alpha_2)).*conj(alpha_2).*conj(beta_2).*cos(h.*conj(beta_2))).*((A./4 + B).*(k.^3.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.^2.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^3.*beta.*cos(beta.*h).*sin(alpha.*y)).*1i + beta.^2.*k.*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)).^2.*1i - 2.*beta.*k.^2.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y))) + (B + lambda).*(k.^4.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)) - beta.*k.^2.*(beta.^2.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^3.*beta.*cos(beta.*h).*sin(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y))) + (A./4 + mu).*(beta.^2.*(alpha.^2.*k.^2.*cos(beta.*h).*cos(alpha.*y) + beta.^2.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)) + 4.*k.^4.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)) - beta.*k.^2.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(alpha.^2.*k.^2.*cos(beta.*h).*cos(alpha.*y) + beta.^2.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2)) - 2.*beta.*k.^2.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y))) - (B + 2.*C).*(beta.*k.^2.*(beta.^2.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^3.*beta.*cos(beta.*h).*sin(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)) + beta.*k.^2.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y))) + (beta.^2.*(alpha.^2.*k.^2.*cos(beta.*h).*cos(alpha.*y) + beta.^2.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)) + 2.*k.^4.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)) - beta.*k.^2.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y))).*(A./4 + B + lambda + mu)).*1i - omega.*conj(beta_2).*(cos(y.*conj(alpha_2)).*conj(k_2).^2.*cos(h.*conj(beta_2)) + cos(y.*conj(beta_2)).*cos(h.*conj(alpha_2)).*(conj(beta_2).^2./2 - conj(k_2).^2./2)).*((k.^5.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).^2.*1i + beta.^2.*k.*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)).^2.*2i + beta.*k.^3.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)).*1i).*(A./4 + B + lambda + mu) + (A./4 + mu).*(k.^5.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).^2.*1i + beta.^2.*k.*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)).^2.*2i - beta.*k.^3.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)).*3i - beta.^2.*k.*(alpha.^2.*k.^2.*cos(beta.*h).*cos(alpha.*y) + beta.^2.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)).*2i) + (B + lambda).*(beta.*k.^3.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)).*1i - beta.^2.*k.*(alpha.^2.*k.^2.*cos(beta.*h).*cos(alpha.*y) + beta.^2.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)).*1i) + (A./4 + B).*(k.^4.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)) + beta.*k.^3.*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)).*1i - beta.*k.^3.*(cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.*beta.*cos(beta.*h).*sin(alpha.*y)).*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)).*1i + beta.^2.*k.^2.*(beta.*cos(alpha.*h).*sin(beta.*y).*(beta.^2./2 - k.^2./2) + alpha.*k.^2.*cos(beta.*h).*sin(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y))) + beta.*k.^3.*(B + 2.*C).*(beta.*cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) - alpha.^2.*beta.*cos(beta.*h).*cos(alpha.*y)).*(cos(alpha.*h).*cos(beta.*y).*(beta.^2./2 - k.^2./2) + k.^2.*cos(beta.*h).*cos(alpha.*y)).*2i);% auto calculated expression
